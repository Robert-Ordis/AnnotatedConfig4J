・今考えてるアノテーション一覧
　→複数設定できてしまうと思われるため、Constraintと同じくやっちゃう？
@ConfigParam(name="", method=READ_METHOD)
//とりあえず単純なパラメータ。
@SimpleConfig(String name)
//値を持たない、書くだけでいいパラメータ
@ArglessConfig(String name)

//値を複数列挙するようなパラメータ。コレクションにどしどし追加される。（例：MCH）
//コレクションのセパレータはリーダーに任せる。
@CollectConfig(String name)

//※実験。アイデア出しの産物。xxx.yyyに関して、xxx以降をメンバー内の別のコンフィグクラスに書き出すための物。
//出力先は別のコンフィグクラス
@SubsetConfig(String head)

SUBSECTIONS(String head)
//※実験。アイディア出しの産物。例えばxxx.*.に対して、*をキーとしたサブセットコンフィグの設定を定義する。
//正直、iniファイルを使うのであれば上のレイヤに「セクション」があるので意義は薄い。
//propertiesやjsonでちょっと複雑な設定をやりたいときに使うものである。
//出力先はMap<String, AnnotatedConfig>
//→正直意味を感じない。propertiesにしたって、そこまでのものならもっと上のレイヤでいろいろやってくと思われるので
//　そこまでサポートするのはさすがに機能を持たせすぎ感がある。よって没。

//上３つに関しては、対象のクラスがStringから変換できることを前提としている。

//関数をもって与えられた値を詳細に扱うためのパラメータ。（これまでの奴）
@CustomConfigFunc(String name)

//名前に一定の規則を持つパラメータ。実装が面倒なので正規表現で記述する。（例：AUTODIAL1, AUTODIAL2）
@RegexConfigFunc(String regex)

//指定文字が出たらそこでコンフィグ読み込みを終わらせることを示す。クラスにくっつける。
@TerminateName(String name)


まず、抽象クラスの「コンフィグリーダー」をつける。
コンフィグリーダーで確定しているのは「パラメータマップ管理を持っている」という点だけ。
外から実装するべきなのは「どういうフォーマットでファイルを読み込むつもりか」という点。
んで、本当はジェネレータでやれれば一番よかったんだけどそうもいかない。
しょうがないので、onRead(String name, String value, String comment)とでもしておく。
やりようによっては、「改行の前に\\で終わってたら複数行コンフィグである」という処理もこうならユーザー拡張でできるはず。

後は、「どのセクション読むか」とか定義しといておけばまあいいんじゃない？
セクションはコンフィグから見れば１個上のレイヤーなんだから。
configReader.read(src, section = null, clazz);

configWriterについてなんだけど、何となくだけどさ。こんなイメージじゃない？
configWriter.write(src, configList);

コンフィグクラスにパラメータ一覧とか持たせること考えたんだけど、（パラメータ直接指定して、文字列から値入れるとか、エクスポートの助けにするとか）
そういうことしても使うか？っていうと首傾げるし、そもそも直接の値指定をしないためにクラス化してるんだし…。
メモリ的にもあんまりよくないかもだし…。
それよりエクスポートならそれ用のクラス用意しておいて、それ用のダンパークラス入れておけばいいよね、ということで…。

サブセットの読み方だが、効率はよろしくないが簡単な方法はあってな。
「同じファイルを、セクションを指定して再読み込みする」というものだ。
サブセットへ、サブセットへと絞られていくのだから次第に読み出す範囲は小さくなって最終的に終わることが保証される。
意地でも再帰使わないっていうことであればま、それがいいでしょ。

セクションは、今んとこロ下の考えで行く予定。とりあえずこれで行っちゃお？
・iniファイル→[SECTION]以下で区切る。
・properties→"aaa.bbb"と指定したら、"(前略).ccc"や"(前略).ddd"といったものを読み込む。

//サブセットマップの自動読み込みは、下記の奴に基本対応できないと考えらえるのでやらない。
//→要するに、のっけからパラメータ名が個別セクションから始まってるやつ
[aaa].subparam1
[aaa].subparam2
[bbb].subparam1
[bbb].subparam2

//現在の進捗：
//とりあえず割と形にはなってきた気がするのです。ひとまずは読み出すところだけ。
//リロード及びリロード可否指定はやめました。よくよく考えたらそれやるとホルダーにコンフィグ保持してごにょごにょやるんだからやばいって。
//んで、できればいいなと思っているのはコンフィグファイルへの書き戻し。
//メンバーについてはとりあえずシリアライザを用意してもらったり、なきゃtoString呼び出すなり。
//カスタムファンクションについては、toString用のこれまたカスタム用を用意してもらうイメージ。今度はリターンがString、引数なしで行く。
//サブセットについては、１個のセット記述中はスルーしておいて、あとでまた再帰もどきでやってくイメージです。
//コメントについてはさすがにごめんなさい。無理です。「値につくコメント」ならともかく…。
//読み込み機ですが、チープなiniファイル読み込み機も作りました。propertiesも不完全ながらとりあえず。
//staticフィールドは扱いクッソ難しいので禁止。finalフィールドも確実性に欠けてしまうので禁止。するのめんどくさい。知らなかったで済ませる。
